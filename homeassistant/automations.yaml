- alias: Alarm Clock
  trigger:
    platform: template
    value_template: '{{ states(''sensor.time'') == (states.input_datetime.alarm_time.attributes.timestamp
      | int | timestamp_custom(''%H:%M'', False)) }}'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.alarm_enabled
      state: 'on'
  action:
  - service: script.alarm_clock
  id: 74ece33e70ab48ed815c8c058b7c7c5f
- alias: Attic Climate - Aircon ON
  initial_state: true
  trigger:
    platform: numeric_state
    entity_id: sensor.noam_a1_temperature
    above: 25
    for:
      minutes: 5
  condition:
  - condition: state
    entity_id: input_boolean.attic_climate
    state: 'on'
  action:
  - service: switch.turn_on
    entity_id: switch.attic_aircon
  id: 0c6c85f3b2cf490e968836dd3acbf0b4
- alias: Attic Climate - Aircon OFF
  initial_state: true
  trigger:
    platform: numeric_state
    entity_id: sensor.noam_a1_temperature
    below: 24
    for:
      minutes: 10
  condition:
  - condition: state
    entity_id: input_boolean.attic_climate
    state: 'on'
  action:
  - service: switch.turn_on
    entity_id: group.attic_fans
  id: 4708ef6726d4450f9b5080b4745c7037
- alias: Attic Climate - Climate Control ON
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.attic_climate
    from: 'off'
    to: 'on'
  action:
  - service: switch.turn_on
    entity_id: switch.attic_aircon
  id: bcef17c79c3d4edfb0c3fdd6bfaafaed
- alias: Attic Climate - Climate Control OFF
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.attic_climate
    from: 'on'
    to: 'off'
  action:
  - service: switch.turn_off
    entity_id: group.attic_aircons
  id: bfb29a3f23b549bfb3be41c6070562e7
- alias: Warm Wakeup
  initial_state: true
  trigger:
  - platform: time
    at: 05:30:00
  condition:
  - condition: state
    entity_id: input_boolean.warm_wakeup
    state: 'on'
  action:
  - service: switch.turn_on
    entity_id: switch.noam_heating
  - service: switch.turn_on
    entity_id: switch.study_heating
  - delay: 7200
  - service: switch.turn_off
    entity_id: switch.noam_heating
  - service: switch.turn_off
    entity_id: switch.study_heating
  id: ca645450fe86482e949917eddb7f5650
- alias: IKEA arrow right
  initial_state: true
  trigger:
  - platform: state
    entity_id: sensor.attic_smart_button
    to: arrow_right_click
  action:
  - service: input_select.select_next
    entity_id: input_select.attic_scenes
  id: b4b3ee601d3a44f18a606f827c1bd63a
- alias: IKEA arrow left
  initial_state: true
  trigger:
  - platform: state
    entity_id: sensor.attic_smart_button
    to: arrow_left_click
  action:
  - service: input_select.select_previous
    entity_id: input_select.attic_scenes
  id: ca8bfde12cb742ff8fdcf6f00d19c367
- alias: Attic Scene Choose
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_select.attic_scenes
  action:
  - service_template: "{% if is_state('input_select.attic_scenes','Study') %} \n \
      \   script.attic_study\n{%-elif is_state('input_select.attic_scenes','Movie')\
      \ %} \n    script.attic_movie\n{%-elif is_state('input_select.attic_scenes','Chillout')\
      \ %}\n    script.attic_chillout\n{%-elif is_state('input_select.attic_scenes','Chillout')\
      \ %}\n    script.attic_lights_off\n{%-else %} \n    none\n{% endif %}\n"
  id: eb7d68641f254885aa2e41ee7f33c636
- alias: Tradfri Dimmer off
  trigger:
    platform: state
    entity_id: sensor.0x000b57fffe2b4107_brightness
  condition:
    condition: template
    value_template: '{{ trigger.to_state.state|int == 0 }}'
  action:
    service: light.turn_off
    entity_id: group.noam_lights
  id: b2002315a1ae4cbba9497013aa2a9f2d
- alias: Tradfri Dimmer on
  trigger:
    platform: state
    entity_id: sensor.0x000b57fffe2b4107_brightness
  condition:
    condition: template
    value_template: '{{ trigger.to_state.state|int != 0 }}'
  action:
    service: light.turn_on
    entity_id: group.noam_lights
    data_template:
      brightness: '{{ trigger.to_state.state|int }}'
  id: d5565bb4e1a74218a25374d774a7ce9e
- alias: Plex - Webhook - to MQTT
  trigger:
    platform: webhook
    webhook_id: 5h8QOFcede
  action:
  - service: mqtt.publish
    data_template:
      topic: plex/update
      payload_template: '{{ (trigger.data | string)[154:][:-55] | replace ("\\\\",
        "\\") | replace ("\\\''", "''") | replace ("\\x","?") }}

        '
  id: 0f742dc519d146809878de98c30776a9
- alias: Plex - Webhook - Toggle Plex Boolean
  trigger:
    platform: mqtt
    topic: plex/update
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{trigger.payload_json.Account[''title''] == ''noamay'' }}'
    - condition: template
      value_template: '{{trigger.payload_json.Player.title == ''MiBox S''}}'
    - condition: template
      value_template: '{{trigger.payload_json.event != ''media.scrobble''}}'
    - condition: template
      value_template: '{{trigger.payload_json.event != ''media.rate''}}'
  action:
    service_template: "{% if ((trigger.payload_json.event == 'media.play') or (trigger.payload_json.event\
      \ == 'media.resume')) %}\n  input_boolean.turn_on\n{% elif ((trigger.payload_json.event\
      \ == 'media.pause') or (trigger.payload_json.event == 'media.stop')) %}\n  input_boolean.turn_off\n\
      {% endif %}\n"
    entity_id: input_boolean.plex
  id: 9d5d13f9073b4f2084bc4595dfdc11ec
- alias: PLEX - Set the mood
  trigger:
    platform: state
    entity_id: input_boolean.plex
    to: 'on'
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.attic_scenes
      option: Movie
  id: 3fb9c2566974461cbef4650e782942df
- alias: PLEX - Reset back to normal
  trigger:
    platform: state
    entity_id: input_boolean.plex
    to: 'off'
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.attic_scenes
      option: Chillout
  id: cc02459d6f554e3b8667ca6571ec88a3
- alias: Auto turn ON boiler - timer
  trigger:
    platform: event
    event_type: timer.started
    event_data:
      entity_id: timer.boiler
  action:
  - service: switch.turn_on
    entity_id: switch.switcher_aybes
  - service: notify.mobile_app_noam_aybess_iphone
    data:
      message: Boiler was turned ON for 45 minutes
  id: 42619e72a64740e5a240e3f5e3729d57
- alias: Auto turn off boiler - timer
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.boiler
  action:
  - service: switch.turn_off
    entity_id: switch.switcher_aybes
  - service: notify.mobile_app_noam_aybess_iphone
    data:
      message: Boiler was turned OFF after 45 minutes
  id: a4f2564b11b34eaeb3451a1b00e42bff
- alias: Room Alarm
  trigger:
    platform: state
    entity_id: binary_sensor.0x00158d0001c02ff2_contact
    to: 'on'
  action:
  - service: notify.mobile_app_noam_aybess_iphone
    data:
      message: Bedroom Door was opened!
  id: 1b9687a8883946fda612e5163c2fd788
- alias: Create a notification when there is updates pending in HACS
  trigger:
    platform: state
    entity_id: sensor.hacs
  condition:
  - condition: template
    value_template: '{{ states(trigger.entity_id) != ''unknown''}}'
  - condition: template
    value_template: '{{ (states(trigger.entity_id) | float) != 0}}'
  action:
    service: persistent_notification.create
    data_template:
      title: Updates pending in HACS
      message: "{% for repo in state_attr(trigger.entity_id, 'repositories') %}\n\
        \  **{{ repo.display_name }}** _{{ repo[\"installed version\"] }}_ -> _{{\
        \ repo[\"available version\"] }}_\n{% endfor %}"
  id: 191c3843d91c419dbd1e9e1bf5938102
- alias: Create a notification when somethig is added to HACS
  trigger:
    platform: event
    event_type: hacs/repository
    event_data:
      action: registration
  condition:
    condition: template
    value_template: '{{ trigger.event.data.repository is defined }}'
  action:
    service: persistent_notification.create
    data_template:
      title: New repository in HACS
      message: '{% set repo = trigger.event.data.repository %} {% set id = trigger.event.data.repository_id
        %} [{{ repo }}](/hacs/repository/{{ id }}) was just added to HACS.'
  id: a59a6a38d95d4d028d297f6df8ef3534
- alias: Set Basement Light Boolean
  initial_state: true
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/0x00158d00047bb30c
  action:
    service_template: "{% if states('sensor.0x00158d00047bb30c_illuminance')|int >\
      \ 300 %} \n    input_boolean.turn_on\n{%-elif states('sensor.0x00158d00047bb30c_illuminance')|int\
      \ < 300 %} \n    input_boolean.turn_off\n{%-else %} \n    none\n{% endif %}\n"
    entity_id: input_boolean.basement_light
  id: d1dbdb0f199841fda64b4388ebce6b2f
- alias: Turn on basement light on bedroom door open
  trigger:
    platform: state
    entity_id: binary_sensor.0x00158d0001c02ff2_contact
    to: 'on'
  condition:
    condition: template
    value_template: '{{ is_state(''input_boolean.basement_light'',''off'') }}'
  action:
  - service: light.turn_on
    data:
      entity_id: light.hall_basement
  id: e9e6ce6c1d424cf3801e65f9397d19a7
- alias: Turn on basement light on occupancy sensor
  trigger:
    platform: state
    entity_id: binary_sensor.0x00158d00047bb30c_occupancy
    to: 'on'
  condition:
    condition: template
    value_template: '{{ states(''sensor.0x00158d00047bb30c_illuminance'')|int < 300
      }}'
  action:
  - service: light.turn_on
    data:
      entity_id: light.hall_basement
  id: 2af03dc237ba4e4d9dfd2ce1444efbb6
- id: 60111595665d4adbb1652812d6dec9ad
  alias: Hall Alarm
  trigger:
  - entity_id: binary_sensor.0x00158d00047bb30c_occupancy
    platform: state
    to: 'on'
  action:
  - data:
      entity_id: group.noam_color
      rgb_color:
      - 255
      - 0
      - 0
    service: light.turn_on
  - data:
      message: Hall Alarm!
    service: notify.ios_noam_aybess_iphone
  - delay: 0:0:5
  - data:
      brightness: 255
      entity_id: group.noam_color
      kelvin: 6410
    service: light.turn_on
  initial_state: false
  mode: single
- id: '1588681098385'
  alias: Telegram Ping Pong
  description: Telegram Test
  trigger:
  - event_data:
      command: /ping
    event_type: telegram_command
    platform: event
  action:
  - data_template:
      target: '{{ trigger.event.data.chat_id }}'
      message: Ok {{ trigger.event.data["from_first"] }}, boiling the kettle!
    service: telegram_bot.send_message
- id: '1593636402152'
  alias: Speed Test Update
  description: ''
  trigger:
  - entity_id: sensor.speedtest_download
    platform: state
  condition:
    condition: time
    after: 08:00:00
    before: '22:00:00'
  action:
  - data:
      message: "<b>הורדה:</b> {{ states('sensor.speedtest_download') }}Mb  \n<b>העלאה:</b>\
        \ {{ states('sensor.speedtest_upload') }}Mb  \n<b>זמן תגובה:</b> {{ states('sensor.speedtest_ping')\
        \ }}ms \n"
      title: <u>תוצאות בדיקת מהירות שעתית</u>
    service: notify.diagnostics_telegram
- id: '1593780055718'
  alias: Attic Lightstrip Toggle
  description: ''
  trigger:
  - device_id: d1926f05d4e94850910e54890462cede
    discovery_id: 0x000d6ffffe0b5d26 action_toggle
    domain: mqtt
    platform: device
    subtype: toggle
    type: action
  condition: []
  action:
  - data: {}
    entity_id: light.sofa_lightstrip
    service: light.toggle
- alias: Internet Stats Update
  description: Statistics for internet connection
  trigger:
    platform: time
    at: '22:00:00'
  action:
  - data:
      message: "<b>מהירות הורדה ממוצעת:</b> {{ states('sensor.download_stats') }}Mb\
        \ \n<b>מהירות העלאה ממוצעת:</b> {{ states('sensor.upload_stats') }}Mb \n<b>זמן\
        \ תגובה ממוצע: </b> {{ states('sensor.ping_stats') }}ms \nהחיבור נותק <b>{{\
        \ states('sensor.disconnection_counter') }}</b> פעמים היום. \n"
      title: <b><u>סיכום אינטרנט יומי</u></b>
    service: notify.aybeserver_telegram
  id: f8707118ca9c43c48b50caf6e8e3f7c8
- id: '1598532331067'
  alias: Notify back online
  description: ''
  trigger:
  - entity_id: binary_sensor.internet_connection
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      message: "<b>Aybes Home Server is back Online!</b> \nInternet connection dropped\
        \ at {{ states('input_datetime.internet_drop_time') }} and returned at {{\
        \ now().strftime('%Y-%m-%d %H:%M:%S') }}"
    service: notify.aybeserver_telegram
  mode: single
- alias: Save Drop Time
  description: ''
  trigger:
  - entity_id: binary_sensor.internet_connection
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - service: input_datetime.set_datetime
    entity_id: input_datetime.internet_drop_time
    data_template:
      datetime: '{{ now().strftime(''%Y-%m-%d %H:%M:%S'') }}'
  mode: single
  id: 3568da6c695d4e8b8773038d1d061a79
- id: '1606057021088'
  alias: Up notice
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - data:
      message: Home Assistant is Online.
      title: <u>Online Alert</u>
    service: notify.diagnostics_telegram
  mode: single
